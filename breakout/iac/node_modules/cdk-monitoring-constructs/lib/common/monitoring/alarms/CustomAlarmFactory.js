"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomAlarmFactory = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const aws_cloudwatch_1 = require("aws-cdk-lib/aws-cloudwatch");
class CustomAlarmFactory {
    constructor(alarmFactory) {
        this.alarmFactory = alarmFactory;
    }
    addCustomAlarm(metric, alarmNameSuffix, disambiguator, props) {
        return this.alarmFactory.addAlarm(metric, {
            ...props,
            disambiguator,
            treatMissingData: props.treatMissingDataOverride ?? aws_cloudwatch_1.TreatMissingData.MISSING,
            threshold: props.threshold,
            comparisonOperator: props.comparisonOperatorOverride ?? props.comparisonOperator,
            alarmDedupeStringSuffix: props.dedupeString,
            alarmNameSuffix,
            alarmDescription: props.additionalDescription ??
                `Threshold of ${props.threshold} has been breached.`,
        });
    }
}
exports.CustomAlarmFactory = CustomAlarmFactory;
_a = JSII_RTTI_SYMBOL_1;
CustomAlarmFactory[_a] = { fqn: "cdk-monitoring-constructs.CustomAlarmFactory", version: "8.1.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3VzdG9tQWxhcm1GYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ3VzdG9tQWxhcm1GYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsK0RBR29DO0FBWXBDLE1BQWEsa0JBQWtCO0lBRzdCLFlBQVksWUFBMEI7UUFDcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUVELGNBQWMsQ0FDWixNQUE4QixFQUM5QixlQUF1QixFQUN2QixhQUFxQixFQUNyQixLQUFzQjtRQUV0QixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtZQUN4QyxHQUFHLEtBQUs7WUFDUixhQUFhO1lBQ2IsZ0JBQWdCLEVBQ2QsS0FBSyxDQUFDLHdCQUF3QixJQUFJLGlDQUFnQixDQUFDLE9BQU87WUFDNUQsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTO1lBQzFCLGtCQUFrQixFQUNoQixLQUFLLENBQUMsMEJBQTBCLElBQUksS0FBSyxDQUFDLGtCQUFrQjtZQUM5RCx1QkFBdUIsRUFBRSxLQUFLLENBQUMsWUFBWTtZQUMzQyxlQUFlO1lBQ2YsZ0JBQWdCLEVBQ2QsS0FBSyxDQUFDLHFCQUFxQjtnQkFDM0IsZ0JBQWdCLEtBQUssQ0FBQyxTQUFTLHFCQUFxQjtTQUN2RCxDQUFDLENBQUM7SUFDTCxDQUFDOztBQTNCSCxnREE0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wYXJpc29uT3BlcmF0b3IsXG4gIFRyZWF0TWlzc2luZ0RhdGEsXG59IGZyb20gXCJhd3MtY2RrLWxpYi9hd3MtY2xvdWR3YXRjaFwiO1xuXG5pbXBvcnQgeyBBbGFybUZhY3RvcnksIEN1c3RvbUFsYXJtVGhyZXNob2xkIH0gZnJvbSBcIi4uLy4uL2FsYXJtXCI7XG5pbXBvcnQgeyBNZXRyaWNXaXRoQWxhcm1TdXBwb3J0IH0gZnJvbSBcIi4uLy4uL21ldHJpY1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbVRocmVzaG9sZCBleHRlbmRzIEN1c3RvbUFsYXJtVGhyZXNob2xkIHtcbiAgcmVhZG9ubHkgdGhyZXNob2xkOiBudW1iZXI7XG4gIHJlYWRvbmx5IGNvbXBhcmlzb25PcGVyYXRvcjogQ29tcGFyaXNvbk9wZXJhdG9yO1xuICByZWFkb25seSBkZWR1cGVTdHJpbmc/OiBzdHJpbmc7XG4gIHJlYWRvbmx5IGFkZGl0aW9uYWxEZXNjcmlwdGlvbj86IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIEN1c3RvbUFsYXJtRmFjdG9yeSB7XG4gIHByb3RlY3RlZCByZWFkb25seSBhbGFybUZhY3Rvcnk6IEFsYXJtRmFjdG9yeTtcblxuICBjb25zdHJ1Y3RvcihhbGFybUZhY3Rvcnk6IEFsYXJtRmFjdG9yeSkge1xuICAgIHRoaXMuYWxhcm1GYWN0b3J5ID0gYWxhcm1GYWN0b3J5O1xuICB9XG5cbiAgYWRkQ3VzdG9tQWxhcm0oXG4gICAgbWV0cmljOiBNZXRyaWNXaXRoQWxhcm1TdXBwb3J0LFxuICAgIGFsYXJtTmFtZVN1ZmZpeDogc3RyaW5nLFxuICAgIGRpc2FtYmlndWF0b3I6IHN0cmluZyxcbiAgICBwcm9wczogQ3VzdG9tVGhyZXNob2xkLFxuICApIHtcbiAgICByZXR1cm4gdGhpcy5hbGFybUZhY3RvcnkuYWRkQWxhcm0obWV0cmljLCB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGRpc2FtYmlndWF0b3IsXG4gICAgICB0cmVhdE1pc3NpbmdEYXRhOlxuICAgICAgICBwcm9wcy50cmVhdE1pc3NpbmdEYXRhT3ZlcnJpZGUgPz8gVHJlYXRNaXNzaW5nRGF0YS5NSVNTSU5HLFxuICAgICAgdGhyZXNob2xkOiBwcm9wcy50aHJlc2hvbGQsXG4gICAgICBjb21wYXJpc29uT3BlcmF0b3I6XG4gICAgICAgIHByb3BzLmNvbXBhcmlzb25PcGVyYXRvck92ZXJyaWRlID8/IHByb3BzLmNvbXBhcmlzb25PcGVyYXRvcixcbiAgICAgIGFsYXJtRGVkdXBlU3RyaW5nU3VmZml4OiBwcm9wcy5kZWR1cGVTdHJpbmcsXG4gICAgICBhbGFybU5hbWVTdWZmaXgsXG4gICAgICBhbGFybURlc2NyaXB0aW9uOlxuICAgICAgICBwcm9wcy5hZGRpdGlvbmFsRGVzY3JpcHRpb24gPz9cbiAgICAgICAgYFRocmVzaG9sZCBvZiAke3Byb3BzLnRocmVzaG9sZH0gaGFzIGJlZW4gYnJlYWNoZWQuYCxcbiAgICB9KTtcbiAgfVxufVxuIl19